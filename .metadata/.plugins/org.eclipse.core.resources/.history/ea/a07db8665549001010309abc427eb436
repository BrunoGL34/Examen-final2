package com.ex.ResponsableMS.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.*;
import org.springframework.web.bind.annotation.*;

import com.ex.ResponsableMS.Dominio.Responsable;
import com.ex.ResponsableMS.Service.ResponsableServiceImp;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;

@RestController
@RequestMapping("/responsable")
@Tag(name = "RESPONSABLE", description = "Microservicio para gestionar responsables")
public class ResponsableWS {

    @Autowired
    ResponsableServiceImp service;

    @GetMapping("listar")
    @Operation(summary = "Lista todos los responsables")
    public ResponseEntity<?> listar(){
        List<Responsable> lista = service.listar();
        return lista.isEmpty() ? ResponseEntity.noContent().build() : ResponseEntity.ok(lista);
    }

    @PostMapping("guardar")
    @Operation(summary = "Guarda un nuevo responsable")
    public ResponseEntity<?> guardar(@RequestBody Responsable r){
        return ResponseEntity.status(HttpStatus.CREATED).body(service.guardar(r));
    }

    @PostMapping("editar")
    @Operation(summary = "Edita un responsable existente")
    public ResponseEntity<?> editar(@RequestBody Responsable r){
        Responsable existe = service.buscar(r.getIdResponsable());
        return (existe == null) ? ResponseEntity.notFound().build() : ResponseEntity.ok(service.guardar(r));
    }

    @PostMapping("buscar")
    public ResponseEntity<?> buscar(@RequestParam int idResponsable){
        Responsable r = service.buscar(idResponsable);
        return (r != null) ? ResponseEntity.ok(r) :
            ResponseEntity.status(HttpStatus.NOT_FOUND)
                          .body("{\"mensaje\":\"No existe un responsable con ID: " + idResponsable + ".\"}");
    }

    @DeleteMapping("eliminar/{idResponsable}")
    public ResponseEntity<?> eliminar(@PathVariable int idResponsable){
        service.eliminar(idResponsable);
        return ResponseEntity.noContent().build();
    }

    @GetMapping("veterinaria/{veterinariaId}")
    public ResponseEntity<?> porVeterinaria(@PathVariable int veterinariaId){
        List<Responsable> responsables = service.porVeterinaria(veterinariaId);
        return responsables.isEmpty() ? ResponseEntity.noContent().build() : ResponseEntity.ok(responsables);
    }
}
